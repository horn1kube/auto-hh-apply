package app.cli;

import app.model.EvaluationResult;
import app.model.UserProfile;
import app.service.OllamaClient;
import app.service.VacancyEvaluationService;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.nio.file.Files;
import java.nio.file.Paths;

/**
 * –ü—Ä–æ—Å—Ç–æ–π CLI –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ü–µ–Ω–∫–∏ –≤–∞–∫–∞–Ω—Å–∏–π
 */
public class EvaluationCli {
    private static final Logger log = LoggerFactory.getLogger(EvaluationCli.class);
    
    public static void main(String[] args) {
        if (args.length < 2) {
            System.out.println("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: java EvaluationCli <vacancyId> <userProfileFile>");
            System.out.println("–ü—Ä–∏–º–µ—Ä: java EvaluationCli 12345678 examples/user.sample.json");
            System.exit(1);
        }
        
        String vacancyId = args[0];
        String userProfileFile = args[1];
        
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            String userProfileJson = Files.readString(Paths.get(userProfileFile));
            ObjectMapper objectMapper = new ObjectMapper();
            UserProfile userProfile = objectMapper.readValue(userProfileJson, UserProfile.class);
            
            System.out.println("=== –û—Ü–µ–Ω–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ ===");
            System.out.println("ID –≤–∞–∫–∞–Ω—Å–∏–∏: " + vacancyId);
            System.out.println("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " + userProfile.getFullName());
            System.out.println();
            
            // –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å (–¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –±–µ–∑ Spring –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞)
            OllamaClient ollamaClient = new OllamaClient();
            VacancyEvaluationService evaluationService = new VacancyEvaluationService(null, null, ollamaClient);
            
            // –û—Ü–µ–Ω–∏–≤–∞–µ–º –≤–∞–∫–∞–Ω—Å–∏—é
            EvaluationResult result = evaluationService.evaluateVacancy(vacancyId, userProfile);
            
            // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            printResult(result);
            
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ü–µ–Ω–∫–µ –≤–∞–∫–∞–Ω—Å–∏–∏: {}", e.getMessage(), e);
            System.exit(1);
        }
    }
    
    private static void printResult(EvaluationResult result) {
        System.out.println("=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –û–¶–ï–ù–ö–ò ===");
        System.out.println();
        
        // –í–∞–∫–∞–Ω—Å–∏—è ‚Üí –ö–∞–Ω–¥–∏–¥–∞—Ç
        System.out.println("üìä –í–∞–∫–∞–Ω—Å–∏—è ‚Üí –ö–∞–Ω–¥–∏–¥–∞—Ç: " + result.getJobToUserFit().getScore() + "/100");
        System.out.println("–ü—Ä–∏—á–∏–Ω—ã:");
        for (String reason : result.getJobToUserFit().getReasons()) {
            System.out.println("  ‚Ä¢ " + reason);
        }
        System.out.println();
        
        // –ö–∞–Ω–¥–∏–¥–∞—Ç ‚Üí –í–∞–∫–∞–Ω—Å–∏—è
        System.out.println("üìä –ö–∞–Ω–¥–∏–¥–∞—Ç ‚Üí –í–∞–∫–∞–Ω—Å–∏—è: " + result.getUserToJobFit().getScore() + "/100");
        System.out.println("–ü—Ä–∏—á–∏–Ω—ã:");
        for (String reason : result.getUserToJobFit().getReasons()) {
            System.out.println("  ‚Ä¢ " + reason);
        }
        
        if (result.getUserToJobFit().getMissingSkills() != null && !result.getUserToJobFit().getMissingSkills().isEmpty()) {
            System.out.println("–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–∞–≤—ã–∫–∏:");
            for (String skill : result.getUserToJobFit().getMissingSkills()) {
                System.out.println("  ‚Ä¢ " + skill);
            }
        }
        System.out.println();
        
        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è
        System.out.println("üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: " + result.getSuggestion());
        System.out.println("–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: " + String.format("%.1f%%", result.getConfidence() * 100));
        System.out.println();
        
        if ("Apply".equals(result.getSuggestion())) {
            System.out.println("‚úÖ –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø –û–¢–ö–õ–ò–ö");
        } else {
            System.out.println("‚ùå –ù–ï –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø");
        }
    }
} 